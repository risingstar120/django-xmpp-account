# -*- coding: utf-8 -*-
#
# This file is part of django-xmpp-account (https://github.com/mathiasertl/django-xmpp-account/).
#
# django-xmpp-account is free software: you can redistribute it and/or modify it under the terms of
# the GNU General Public License as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# django-xmpp-account is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
# the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with django-xmpp-account.
# If not, see <http://www.gnu.org/licenses/>.

from datetime import timedelta

################################
### Standard Django settings ###
################################
# This is a standard Django settings file. Please see
#   https://docs.djangoproject.com/en/dev/ref/settings/
# for more information.

# set to true during development:
#DEBUG = False
#TEMPLATE_DEBUG = DEBUG

# You will receive tracebacks to these addresses:
ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

#MANAGERS = ADMINS

# A random string, make this unique, and don't share it with anybody.
SECRET_KEY = ''

# Django supports MySQL, PostgreSQL et al, please see:
# https://docs.djangoproject.com/en/dev/ref/databases/
# for a list of available options.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '',                      # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': '',
        'PASSWORD': '',
        'HOST': '',                      # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',                      # Set to empty string for default.
    }
}

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/dev/ref/settings/
ALLOWED_HOSTS = []

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'Europe/Vienna'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/var/www/example.com/static/"
STATIC_ROOT = ''

# URL prefix for static files.
# Example: "https://example.com/static/", "https://static.example.com/"
STATIC_URL = '/static/'

###############################
### XMPP host configuration ###
###############################

# The XMPP_HOSTS setting configures the XMPP hosts you offer. You can give multiple hosts and they
# can be used
XMPP_HOSTS = {
    'example.com': {
        # Wether to allow registration for this host. If you set this to False, users will still be
        # able to reset their password or email and delete their account.
        'REGISTRATION': True,
        # If this host allows other means of registrations (e.g. IBR), set this to True. This will
        # cause the site to register the account with a random password so the same username can't
        # be registered by someone else if the 
        #'RESERVATION': False, 
        #
        # The homepage of this particular host. This should point to the primary homepage of your
        # server, not this page. The default is 'https://<dict-key>'
        'HOMEPAGE': 'https://example.com',
        #
        # Address from which confirmation emails are sent. If not given, use the global
        # DEFAULT_FROM_EMAIL setting.
        'FROM_EMAIL': 'example.com <noreply@example.com>',
        #
        # By default, users cannot give email addresses with the same domain as any of the hosts
        # named in XMPP_HOSTS, as users frequently enter that domain in error. If you do also offer
        # custom email addresses on this domain, you can set this EMAIL to True.
        #EMAIL = True
        #
        # The "brand" used by the site. This is the top-left item next to the menu.
        #BRAND = ''
        #
        # A URL to a webchat, if any.
        #'WEBCHAT': 'https://webchat.example.com',
        #
        # If set, the hostname in the URL used for sharing this page via Twitter or Facebook will
        # always be this one. Useful if the page is available via multiple domains.
        #'CANONICAL_HOST': 'account.example.com',
        #
        # A link to a Twitter account and/or Facebook page for this host, if any.
        #'TWITTER': 'jabber_at',
        #'FACEBOOK': 'jabber.at',
        #
        # Image used when the site is shared via Facebook, should be at least 200x200.
        #'FACEBOOK_IMAGE': 'https://example.com/static/fb.png'
        # Image used when site is shared via twitter. Minimum size of 120x120px, should look good
        # when cropped to a 4:3 aspect ration (120x90px).
        #'TWITTER_IMAGE': 'https://example.com/static/twitter.png'
        #
        # The fingerprint used for signing emails from this host. Generate a key with 
        # "python manage.py genkey example.com"
        #'GPG_FINGERPRINT': '2E1FF6F2E93E419BE1CBFC2B7A346DFAEB38324A',
    },
    'example.net': {
        # ...
    },
}

# Set to False to disable all social media buttons. Note that shariff[1] is used for all social
# media buttons so no data is leaked to any social network.
#   [1] https://github.com/heiseonline/shariff
#ENABLE_SOCIAL_BUTTONS = False

# If you have multiple XMPP hosts defined in XMPP_HOSTS and your site is available via multiple
# hostnames, you can map the hostnames to specific XMPP hosts. This will cause the hostname to be
# preselected in the dropdown when users visit the site through a particular URL.
XMPP_HOSTS_MAPPING = {
    'register.example.com': 'example.com',
    'account.example.net': 'example.net',
}

# The default host from XMPP_HOSTS preselected if the site is visited via a hostname not listed in
# XMPP_HOSTS_MAPPING.
DEFAULT_XMPP_HOST = 'example.com'

# The default brand displayed on the top-left. Can be overridden on a per-host basis.
#BRAND = ''

# Backend to communicate with our XMPP hosts, see django-xmpp-backends[1] for further information.
#   [1] https://github.com/mathiasertl/django-xmpp-backends
XMPP_BACKENDS = {
    'default': {
        'BACKEND': 'xmpp_backends.ejabberd_xmlrpc.EjabberdXMLRPCBackend',
        'uri': 'http://127.0.0.1:4560',
        # If you have authentication defined for the xmlrpc API:
        #'user': '',
        #'server': '',
        #'password': '',
    }
}

# Display a warning that this server stores cleartext passwords
CLEARTEXT_PASSWORDS = True

# Welcome message sent to new registrations
#WELCOME_MESSAGE = {
#    'subject': u'Welcome to {domain}!',
#    'message': u'''Dear {username},
#
#Welcome to {domain} .. ''',
#}

##########################
### Anti-SPAM measures ###
##########################
# Some TLDs cannot be used for registration. If you add domains later, users on these domains will
# still be able to reset their passwords.
#BLOCKED_EMAIL_TLDS = set('spam.ru', 'other-spam.com', )

# How long emailed confirmation keys stay valid
CONFIRMATION_TIMEOUT = timedelta(hours=24)

# How long displayed forms can be submitted (an anti-spam measure)
FORM_TIMEOUT = 60 * 60  # 1 hour

# How long spammers are blocked
SPAM_BLOCK_TIME = 60 * 60 * 24  # one day!

# How often a single IP-address is allowed to register
REGISTRATION_RATE = {
    timedelta(minutes=2): 1,
    timedelta(hours=1): 2,
    timedelta(days=1): 5,
}

# IP addresses not affected by REGISTRATION_RATE.
#RATELIMIT_WHITELIST = {
#    '192.168.0.22',
#}

# If you do not want CAPTCHAs, you can disable them completely:
#ENABLE_CAPTCHAS = False

#############################
### Username restrictions ###
#############################
# Minimum and maximum userlength
MIN_USERNAME_LENGTH = 3
MAX_USERNAME_LENGTH = 32

############################
### Celery configuration ###
############################
# Set BROKER_URL to a non-None value to enable the Celery distributed task queue. The task-queue
# will be used to send emails. This is especially useful if you enable GPG. Please see our
# homepage:
#   https://github.com/mathiasertl/django-xmpp-account/#celery-setup
# for more information.
#
#BROKER_URL = 'redis://localhost:6379/0'
#CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

###########################
### GnuPG configuration ###
###########################
# Default options for GnuPG. Please see
#   https://pythonhosted.org/python-gnupg/#getting-started
# for available options. To completely disable GnuPG, you can set this setting to None.
#GNUPG = {
#    'gnupghome': os.path.join(BASE_DIR, '.gpg'),
#    'gpgbinary': '/usr/bin/gpg',
#    'options': ['--lock-multiple'],
#}
#
#
# The default keyserver to use.
#GPG_KEYSERVER = 'pool.sks-keyservers.net

# Set to True to sign mails even if users did not give their own GPG key.
#FORCE_GPG_SIGNING = False
